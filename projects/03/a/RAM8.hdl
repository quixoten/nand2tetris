// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=load-0, b=load-1, c=load-2, d=load-3, e=load-4, f=load-5, g=load-6, h=load-7);
    Register(in=in, load=load-0, out=out-0);
    Register(in=in, load=load-1, out=out-1);
    Register(in=in, load=load-2, out=out-2);
    Register(in=in, load=load-3, out=out-3);
    Register(in=in, load=load-4, out=out-4);
    Register(in=in, load=load-5, out=out-5);
    Register(in=in, load=load-6, out=out-6);
    Register(in=in, load=load-7, out=out-7);
    Mux8Way16( a=out-0, b=out-1, c=out-2, d=out-3, e=out-4, f=out-5, g=out-6, h=out-7, sel=address, out=out);
}
